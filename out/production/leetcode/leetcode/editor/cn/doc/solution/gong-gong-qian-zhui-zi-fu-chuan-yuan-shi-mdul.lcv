> Problem: [14. 最长公共前缀](https://leetcode.cn/problems/longest-common-prefix/description/)

[TOC]

# 思路

> 原始解题方法，逐一进行比较

# 解题方法

1. 处理特殊情况的字符串比如空
2. 获取字符串第一个字符strs[:j] j=1
3. 正常情况下先获取数组中长度最小的字符串
4. 变量数组，逐一比较字符串和 2获取的字符串进行比较，如果全部符合，重新循环，同时j++ 重新赋值公共字符串，进行下一轮比较
5. 需注意的是j的取值，需要通过3的字符串长度进行限制，否则会超出范围

# 复杂度

- 时间复杂度:

> O(mn)

- 空间复杂度:

# Code

* []

```Go

func longestCommonPrefix(strs []string) string {

    prefix :=""
    if len(strs[0])>0 {
        prefix = strs[0][:1]
    }
    minStr := strs[0]
    for i:=0;i<len(strs);i++{
        if len(strs[i]) < len(minStr) {
            minStr = strs[i]
        }
    }
    if prefix == ""  || minStr ==""{
        return ""
    }
   
    j:=1
    for i:=0;i<len(strs);i++{
        if strs[i][:j] != prefix {
            break
        }
        if i+1 == len(strs){
            j++
            if j<= len(minStr){
                prefix = strs[0][:j]
                i=-1
            } else {
                break
            }
            
        }
    }

    return  strs[0][:j-1]

  
}

```

